!function(){Blaze.Data={NodeTypes:{COURSE:"course",CHAPTER:"chapter",SECTION:"section",CLIP:"clip",SEGMENT:"segment",BRANCH:"branch"},branching:{isBranchHead:function(a){return a.lastIndexOf("_")==a.length-1},isInBranch:function(a){return-1!=this.trimBranchHead(a).indexOf("_")},getBranchNumber:function(a){return a=this.trimBranchHead(a),parseInt(a.substr(a.lastIndexOf("_")+1,a.length),10)},getBranchHeadNodeId:function(a,b){return a=this.trimBranchHead(a),b+"/"+a.substr(0,a.lastIndexOf("_")+1)},getBranchNodeId:function(a){return this.getBranchHeadNodeId(a)+"branch"+this.getBranchNumber(a)},trimBranchHead:function(a){return this.isBranchHead(a)?a.substr(0,a.length-1):a}},matchers:{}};var a=function(a){return function(b){return b.is(a)}};Blaze.Data.CompletionRequirement=function(){},_.extend(Blaze.Data.CompletionRequirement.prototype,{}),Blaze.Data.CompletionManager=function(){},_.extend(Blaze.Data.CompletionManager.prototype,{}),Blaze.Data.Counter=Blaze.Model.extend({initialize:function(){this.id=this.id||this.cid},defaults:{count:0,step:1,dir:1},inc:function(a){this.setCount((a||this.get("step"))*this.get("dir"))},dec:function(a){this.setCount(-1*(a||this.get("step"))*this.get("dir"))},saveToModel:function(a){a.set(this.id+"Count",this.get("count"))},restoreFromModel:function(a){a.get(this.id+"Count")},setCount:function(a){_.isNumber(a)&&this.set("count",a)}}),_.each(Blaze.Data.NodeTypes,function(b){Blaze.Data.matchers[b]=a(b)}),Blaze.Data.CourseNode=Blaze.TreeNode.extend({defaults:{nodeType:Blaze.Data.NodeTypes.COURSE,id:Blaze.Data.NodeTypes.COURSE,nodeid:Blaze.Data.NodeTypes.COURSE}}),Blaze.Data.ChapterNode=Blaze.TreeNode.extend({defaults:{nodeType:Blaze.Data.NodeTypes.CHAPTER}}),Blaze.Data.SectionNode=Blaze.TreeNode.extend({defaults:{nodeType:Blaze.Data.NodeTypes.SECTION}}),Blaze.Data.ClipNode=Blaze.TreeNode.extend({defaults:{nodeType:Blaze.Data.NodeTypes.CLIP}}),Blaze.Data.SegmentNode=Blaze.TreeNode.extend({defaults:{nodeType:Blaze.Data.NodeTypes.SEGMENT}}),Blaze.Data.BranchNode=Blaze.TreeNode.extend({defaults:{nodeType:Blaze.Data.NodeTypes.BRANCH}}),Blaze.Data.NodeMapping={course:Blaze.Data.CourseNode,chapter:Blaze.Data.ChapterNode,section:Blaze.Data.SectionNode,clip:Blaze.Data.ClipNode,segment:Blaze.Data.SegmentNode,branch:Blaze.Data.BranchNode};var b={silent:!0};Blaze.Data.IleModel=Blaze.Tree.extend({serializers:{all:["complete"]},nodeDefaults:{},parsers:{chapters:"chapters",sections:"sections",clips:"clips",segs:"segs",seg:["data","branch","branching","seg"],branch:"branch"},create:function(a,b,c){var d=Blaze.Data.NodeMapping[a]||Blaze.TreeNode,e=new d(b);return Blaze.dispatcher.trigger("node:create",e,c),this.add(e,c)},add:function(a,c){return a.set(this.nodeDefaults,b),this.setNodeSerializer(a),Blaze.Tree.prototype.add.apply(this,_.toArray(arguments)),Blaze.dispatcher.trigger("node:add",a,c),a},load:function(a){var b=_.bind(this.parse,this);return Blaze.loadAsset(a+".xml","xml",b)},parse:function(a){var b=_.getXmlNodes(a,"chapters > chapter"),c=this.create(Blaze.Data.NodeTypes.COURSE);Blaze.Parsers.parse(this.parsers.chapters,!0,this,b,c),Blaze.dispatcher.trigger("iledata:loaded",this)},serialize:function(){var a=_.map(this.nodes,function(a){return a.serialize()});return JSON.stringify(a)},deserialize:function(a){if(a){var b=JSON.parse(a);if(b.length!=this.nodes.length)return void Blaze.dispatcher.trigger("iledata:error","suspend length does not match nodes length");_.each(b,function(a,b){_.isArray(a)&&this.nodes[b].deserialize(a)},this),Blaze.dispatcher.trigger("iledata:restored",this)}},setNodeSerializer:function(a){var b=_.find([a.get("nodeid"),a.get("sProfile"),a.get("sActivityType"),a.get("nodeType"),"all"],function(a){return a?this.serializers[a]:!1},this);a.setSerializer(this.serializers[b]||[])},addNodeSerializer:function(a,b){this.serializers[a]=b},toString:function(){return"ile model ["+this.nodes.join(", ")+"]"}}),Blaze.Parsers.add("chapters",null,function(a,b,c){var d,e;_.each(b,function(b){e=_.getXmlAttrs(b,["id","title"]),e.nodeid=e.id,d=a.create(Blaze.Data.NodeTypes.CHAPTER,e,c),Blaze.Parsers.parse(a.parsers.sections,!0,a,_.getXmlNodes(b,"section"),d)})}),Blaze.Parsers.add("sections",null,function(a,b,c){var d,e,f=c.get("nodeid");_.each(b,function(b){e=_.getXmlAttrs(b,["id","title"]),e.nodeid=f+"/"+e.id,d=a.create(Blaze.Data.NodeTypes.SECTION,e,c),Blaze.Parsers.parse(a.parsers.clips,!0,a,_.getXmlNodes(b,"clip"),d)})}),Blaze.Parsers.add("clips",null,function(a,b,c){var d,e,f=c.get("nodeid");_.each(b,function(b){e=_.getXmlAttrs(b,["id","title"]),e.nodeid=f+"/"+e.id,d=a.create(Blaze.Data.NodeTypes.CLIP,e,c),Blaze.Parsers.parse(a.parsers.segs,!0,a,_.getXmlNodes(b,"seg"),d)})}),Blaze.Parsers.add("segs",null,function(a,b,c){_.each(b,function(b){var d=_.getXmlAttrs(b,["id"]).id,e=_.getXmlAttrs($(b).find("args").first().get(0));e.id=d,Blaze.Parsers.parse(a.parsers.seg,e,a,e,c)})}),Blaze.Parsers.add("data",function(a){return _.contains(["course","chapter","section","clip"],a.id)},function(a,c,d){var e=d.findParent(function(a){a.is(c.id)});e&&e.set(c,b)}),Blaze.Parsers.add("label_data",{id:"labels"},function(a,b){Blaze.dispatcher.trigger("labels:add",b)}),Blaze.Parsers.add("branch",{id:"branch"},function(a,b,c){var d=(b.id,c.get("nodeid"),c.get("nodeid")+"/"+b.sParentSeg),e=a.get(d),f="_branch"+b.nBranch,g=d+f;return e?(b.id=f,b.nodeid=g,console.log("explict branch creation",f,b),a.create(Blaze.Data.NodeTypes.BRANCH,b,e)):void console.error("missing branch head",d)}),Blaze.Parsers.add("branching",function(a){return _.isNumber(a.nBranch)},function(a,b,c){var d=(b.id,c.get("nodeid")),e=c.get("nodeid")+"/"+b.sParentSeg,f=a.get(e),g="_branch"+b.nBranch,h=e+g,i=a.get(h);return f?(i||(i=a.create(Blaze.Data.NodeTypes.BRANCH,{id:g,nodeid:h},f)),b.nodeid=d+"/"+b.id,b.inBranch=!0,b.branchHead=e,a.create(Blaze.Data.NodeTypes.SEGMENT,b,i)):void console.error("missing branch head",e)}),Blaze.Parsers.add("seg",null,function(a,b,c){return b.nodeid||(b.nodeid=c.get("nodeid")+"/"+b.id),a.create(Blaze.Data.NodeTypes.SEGMENT,b,c)}),Blaze.Mixer.add("ileModel",{mixinBeforeInitialize:function(a){_.bindAll(this,"loadModel","_onModelParsed");var b=new Blaze.Data.IleModel;_.each(this.serializers,function(a,c){_.isArray(a)&&b.addNodeSerializer(c,a)}),this.model=b,this.onModelInit(b),this.modelPath=a.dataPath||"full-struct"},onModelInit:function(){},onModelParsed:function(){},_onModelParsed:function(){this.onModelParsed(this.model)},serializers:{},nodeMapping:{course:Blaze.Data.CourseNode,chapter:Blaze.Data.ChapterNode,section:Blaze.Data.SectionNode,clip:Blaze.Data.ClipNode,segment:Blaze.Data.SegmentNode,branch:Blaze.Data.BranchNode},loadModel:function(){return this.model.load(this.modelPath).then(this._onModelParsed)},getFirstSegment:function(){return this.model.root.findChild(Blaze.Data.matchers.segment)},getFirstSegmentId:function(){var a=this.getFirstSegment();return a?a.get("nodeid"):null},getRoot:function(){return this.model.root},getNode:function(a){return this.model.get(a)},createNode:function(){},setRootData:function(){this.model.root.set.apply(this.model.root,_.toArray(arguments))},getRootData:function(a){return this.model.root.get(a)},getSaveData:function(){return this.model.serialize()},setSaveData:function(a){_.isString(a)&&this.model.deserialize(a)}}),Blaze.Quiz={NodeTypes:{QUIZ:"quiz"}},Blaze.QuizNode=Blaze.TreeNode.extend({mixins:["hashBinder","globalEvents","configurable"],defaultConfig:{nPointValue:100,bBanked:!1,bGrouped:!1,nBankSize:5},defaults:{nodeType:Blaze.Quiz.NodeTypes.QUIZ},initialize:function(){this.nodes=[],this.getBlazeConfig(this.get("nodeid")),this.triggerGlobal("quiz:created",this)},addActivity:function(a){this.nodes.push(a),a.set({inQuiz:!0,quizId:this.get("nodeid"),questionId:_.uniqueId("q")}),a.on("change:grade",this.onQuestionGraded,this),a.quiz=this},onQuestionGraded:function(a){this.triggerGlobal("quiz:answered",a,this)},getGroupedNodes:function(){return _.groupBy(this.nodes,function(a){return a.get("nGroup")})},getFailedGroupNumbers:function(){var a=this.getGroupedNodes(),b=[];return _.each(a,function(a,c){_.all(a,this.isCorrect)||b.push(c)},this),b},isCorrect:function(a){return"correct"==a.get("grade")},grade:function(){this.nodes.length,this.getCorrectCount()},isComplete:function(){return _.every(this.nodes,function(a){return a.get("grade")})},getCorrectCount:function(){var a=_.countBy(this.nodes,function(a){return a.get("grade")});return a.correct||(a.correct=0),a.incorrect||(a.incorrect=0),a.total=this.nodes.length,a},getScore:function(){var a=this.nodes.length,b=this.getCorrectCount();return Math.round(b.correct/a*100)},isAllCorrect:function(){var a=this.getCorrectCount();return 0!==a.total&&a.total==a.correct}}),Blaze.Mixer.add("quizzed",{args:{quiz:"nQuiz",activity:"sActivityType"},mixinBeforeInitialize:function(){this.quizzes={}},onModelParsed:function(a){this.model=a,_.each(this.getQuizActivityNodes(a.nodes),this.addActivityToQuiz,this)},getQuizActivityNodes:function(a){return _.filter(a,function(a){return a.get(this.args.quiz)&&a.has(this.args.activity)},this)},addActivityToQuiz:function(a){var b=a.get("nQuiz");this.getQuiz(b,!0).addActivity(a)},createQuiz:function(a){var b="quiz_"+a,c=new Blaze.QuizNode({nodeid:b});return this.quizzes[b]=c,this.model.add(c),c},getQuiz:function(a,b){var c=this.quizzes["quiz_"+a];return!c&&b&&(c=this.createQuiz(a)),c}}),Blaze.Data.Timer=Blaze.Model.extend({})}();